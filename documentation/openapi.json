{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://lab.idiap.ch/devel/wenet/",
      "description": "Idiap production server"
    }
  ],
  "info": {
    "description": "Component that handle the personal context of the users <br /> <img src=\"https://drive.google.com/uc?id=1oL92bUTr5oLwOs84oo9ycCJWcI4ARaXl\" /> <br /> <img src=\"https://drive.google.com/uc?id=1iF39kFa5ZcYKadCzynHvRkt6ftj59aHc\" /> <br />Routines are an embedded representation of the user habits.",
    "version": "0.0.5",
    "title": "WeNet - personal_context_builder",
    "contact": {
      "email": "william.droz@idiap.ch"
    }
  },
  "tags": [
    {
      "name": "Semantic routines",
      "description": "Human readable routines"
    },
    {
      "name": "User's embedded routines",
      "description": "Everything about the routines of the users"
    },
    {
      "name": "Real-time operations",
      "description": "all requests that handle real-time informations"
    }
  ],
  "paths": {
    "/routines/": {
      "get": {
        "summary": "get the list all routines for all users with all models",
        "tags": [
          "User's embedded routines"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "models",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false,
            "description": "filter models base on name"
          }
        ],
        "responses": {
          "200": {
            "description": "user routines",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                },
                "example": {
                  "SimpleLDA": {
                    "mock_user_1": [
                      0,
                      1,
                      0,
                      0.5,
                      1
                    ],
                    "mock_user_2": [
                      0,
                      1,
                      1,
                      0.5,
                      1
                    ],
                    "mock_user_3": [
                      0,
                      1,
                      0,
                      0.5,
                      0
                    ]
                  },
                  "SimpleBOW": {
                    "mock_user_1": [
                      1,
                      1,
                      0,
                      0.5,
                      1
                    ],
                    "mock_user_2": [
                      1,
                      1,
                      1,
                      0.5,
                      1
                    ],
                    "mock_user_3": [
                      1,
                      1,
                      0,
                      0.5,
                      0
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/closest/{lat}/{lng}/{N}/": {
      "get": {
        "summary": "get closest N users from a given point",
        "tags": [
          "Real-time operations"
        ],
        "parameters": [
          {
            "name": "lat",
            "in": "path",
            "description": "latitude of the given point",
            "required": true,
            "schema": {
              "type": "number",
              "format": "number"
            }
          },
          {
            "name": "lng",
            "in": "path",
            "description": "longitude of the given point",
            "required": true,
            "schema": {
              "type": "number",
              "format": "number"
            }
          },
          {
            "name": "N",
            "in": "path",
            "description": "number of closest users to receive",
            "required": true,
            "schema": {
              "type": "number",
              "format": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "closest N users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersDistances"
                },
                "example": {
                  "mock_user_1": 330,
                  "mock_user_2": 340,
                  "mock_user_3": 350
                }
              }
            }
          }
        }
      }
    },
    "/routines/{user_id}/": {
      "get": {
        "summary": "get specific user routine",
        "tags": [
          "User's embedded routines"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "in": "query",
            "name": "models",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false,
            "description": "filter models base on name"
          }
        ],
        "responses": {
          "200": {
            "description": "specific user's routine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                },
                "example": {
                  "SimpleLDA": {
                    "mock_user_1": [
                      0,
                      1,
                      0,
                      0.5,
                      1
                    ]
                  },
                  "SimpleBOW": {
                    "mock_user_1": [
                      1,
                      1,
                      0,
                      0.5,
                      1
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/models/": {
      "get": {
        "summary": "get the list of all available models",
        "tags": [
          "User's embedded routines"
        ],
        "responses": {
          "200": {
            "description": "available models",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelDescriptions"
                },
                "example": {
                  "SimpleLDA": "Simple LDA over all the users, with 15 topics",
                  "SimpleBOW": "Bag-of-words approach, compute the mean of all days"
                }
              }
            }
          }
        }
      }
    },
    "/semantic_routines/{user_id}/{weekday}/{time}/": {
      "get": {
        "summary": "get the semantic routine for a given user, weekday and time",
        "tags": [
          "Semantic routines"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "weekday",
            "in": "path",
            "description": "at which day of the week",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "time",
            "in": "path",
            "description": "at which time",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "semantic routine of the user for the given weekday/time",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeekDaySemanticRoutine"
                }
              }
            }
          }
        }
      }
    },
    "/semantic_routines_leaving/{user_id}/{weekday}/{label}/": {
      "get": {
        "summary": "get the information about what when the user_id is leaving the label on the given weekday",
        "tags": [
          "Semantic routines"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "weekday",
            "in": "path",
            "description": "at which day of the week",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "label",
            "in": "path",
            "description": "which label",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "semantic routine of the user for the given weekday/time",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeekDaySemanticRoutineTransition"
                }
              }
            }
          }
        }
      }
    },
    "/semantic_routines_entering/{user_id}/{weekday}/{label}/": {
      "get": {
        "summary": "get the information about what when the user_id is entering the label on the given weekday",
        "tags": [
          "Semantic routines"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "weekday",
            "in": "path",
            "description": "at which day of the week",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "label",
            "in": "path",
            "description": "which label",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "semantic routine of the user for the given weekday/time",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeekDaySemanticRoutineTransition"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ScoredLabel": {
        "type": "object",
        "description": "Label with score",
        "properties": {
          "label": {
            "type": "string",
            "description": "name of the label"
          },
          "score": {
            "type": "number",
            "description": "score of the label"
          }
        }
      },
      "WeekDaySemanticRoutine": {
        "type": "object",
        "description": "Labels distribution for a given user, time and weekday",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "id of the user"
          },
          "weekday": {
            "type": "string",
            "description": "day of the week"
          },
          "closest_time_slot": {
            "type": "string",
            "description": "Closest time slot in the database for the requested time (hh:mm)"
          },
          "label_distribution": {
            "description": "Distribution of the labels",
            "additionalProperties": {
              "type": "array",
              "description": "label with score"
            },
            "items": {
              "$ref": "#/components/schemas/ScoredLabel"
            }
          },
          "confidence": {
            "type": "number",
            "description": "confidence of the result"
          }
        }
      },
      "WeekDaySemanticRoutineTransition": {
        "type": "object",
        "description": "When the user is transitioning(in or out) from a specific label for a given weekday",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "id of the user"
          },
          "weekday": {
            "type": "string",
            "description": "day of the week"
          },
          "transition_time": {
            "type": "string",
            "description": "from when the user is to the label location (hh:mm)"
          },
          "label": {
            "type": "string",
            "description": "semantic label such a work, home, ..."
          },
          "confidence": {
            "type": "number",
            "description": "confidence of the result"
          }
        }
      },
      "UserRoutine": {
        "type": "object",
        "description": "Routines of the users, keys are user_ids and values are vectors that represent the routines",
        "additionalProperties": {
          "type": "array",
          "description": "vector that represent user routine",
          "items": {
            "type": "number"
          }
        }
      },
      "Model": {
        "type": "object",
        "description": "There are several models (ML) that are used to modelize the routine of the users. Each model (key) are linked to the dict (users->vectors)",
        "additionalProperties": {
          "$ref": "#/components/schemas/UserRoutine"
        }
      },
      "ModelDescriptions": {
        "description": "all models with their description. Descriptions are extracted from docstring for the models.",
        "additionalProperties": {
          "type": "string",
          "description": "model docstring"
        }
      },
      "UsersDistances": {
        "description": "users with distances from the point given by the caller",
        "type": "object",
        "additionalProperties": {
          "type": "number",
          "description": "distances from the given point"
        }
      }
    }
  }
}